#!/usr/bin/env bash

if [[ -z ${NETWORK} ]]; then
	echo "[Error] Cannot obtain NETWORK env variable"
	exit 1
fi

export PATH=${PATH}:/usr/local/bin
mkdir -p /ipc
case ${NETWORK} in
	mainnet|testnet|preview|preprod) : ;;
	*) echo "[Error] Managed configuration for network ${NETWORK} does not exist"; exit 1 ;;
esac

echo "Starting: /usr/local/bin/cardano-node run"
echo "--config /opt/cardano/config/${NETWORK}-config.json"
echo "--database-path /data/db"
echo "--host-addr 0.0.0.0"
echo "--port 3001"
echo "--socket-path /ipc/node.socket"
echo "--topology /opt/cardano/config/${NETWORK}-topology.json"
echo "+RTS"
echo "-N2"
echo "-I0"
echo "-A16m"
echo "-qg"
echo "-qb"
echo "--disable-delayed-os-memory-return"
echo "-RTS"
echo "..or, once again, in a single line:"
echo "/usr/local/bin/cardano-node run --config /opt/cardano/config/${NETWORK}-config.json --database-path /data/db --host-addr 0.0.0.0 --port 3001 --socket-path /ipc/node.socket --topology /opt/cardano/config/${NETWORK}-topology.json +RTS -N2 -I0 -A16m -qg -qb --disable-delayed-os-memory-return -RTS"
exec /usr/local/bin/cardano-node run --config /opt/cardano/config/${NETWORK}-config.json --database-path /data/db --host-addr 0.0.0.0 --port 3001 --socket-path /ipc/node.socket --topology /opt/cardano/config/${NETWORK}-topology.json +RTS -N2 -I0 -A16m -qg -qb --disable-delayed-os-memory-return -RTS ${@}
